volumes:
  aws_db: 

services:
  frontend: 
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    networks: 
      - aws-network
    volumes: 
      - ./frontend:/frontend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 3001:3001
    depends_on: 
      - mysql
    networks: 
      - aws-network
    volumes: 
      - ./backend:/backend
    restart: always
  mysql:
    image: mysql:8.4.0
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    container_name: mysql
    restart: always
    ports:
      - 3307:3306
    volumes: 
      - aws_db:/var/lib/mysql
    networks: 
      - aws-network
  nginx:
    image: nginx:stable-alpine
    container_name: lara_nginx
    volumes: 
      - ./laravel:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports: 
      - "7000:80"
    networks:
      - aws-network
  php: 
    volumes: 
      - ./laravel:/var/www/html
    build: 
      context: ./laravel
      dockerfile: Dockerfile
    container_name: lara_php
    ports:
      - "9004:9004"
    networks:
      - aws-network
    depends_on: 
      - mysql
  composer:
    image: composer:latest
    container_name: lara_composer
    volumes:
      - ./laravel:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - mysql
      - php
    networks:
      - aws-network   
networks:
  aws-network:
    driver: bridge

